{"version":3,"sources":["images/movie-ticket-icon.svg","images/movie-db-logo.svg","actions/postActions.js","actions/types.js","components/Navigation.js","components/Footer.js","components/Carousel.js","components/MovieCategories.js","containers/Discover.js","containers/Home.js","containers/TVShows.js","containers/SearchMovies.js","components/EmbeddedVideo.js","components/MovieInfo.js","reducers/postReducer.js","reducers/index.js","store.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","API_KEY","API_URL","getPopularMovies","dispatch","axios","get","concat","then","response","type","payload","data","results","getRMovies","getMovie","id","getVideos","getImdbData","imdb_id","getActors","actors","length","undefined","actorImages","forEach","actor","split","join","fetch","res","json","push","profile_path","toggleMovie","bool","Navigation","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleDrawer","side","open","setState","defineProperty","state","left","searchInputValue","bind","assertThisInitialized","handleSearchChange","handleSearch","e","target","value","preventDefault","props","searchMovies","history","classes","sideList","react_default","a","createElement","className","list","List_default","ListItem_default","button","component","href","ListItemText_default","primary","Divider_default","Close_default","AppBar_default","color","position","Toolbar_default","IconButton_default","onClick","aria-label","Menu_default","src","movieTicketIcon","alt","onSubmit","InputBase_default","onChange","placeholder","required","Search_default","Drawer_default","onClose","tabIndex","role","onKeyDown","Component","connect","searchOutput","movies","query","querySearch","String","replace","withRouter","withStyles","width","fullList","Footer","logo","AutoPlaySwipeableViews","autoPlay","SwipeableViews","Carousel","handleNext","prevState","activeStep","handleBack","handleStepChange","viewMovie","getUpcomingMovies","getGenres","_this2","dataset","setTimeout","chosenMovie","Array","currentImdbData","Actors","_this3","_this$props","theme","maxSteps","upcomingMovies","variant","root","axis","direction","index","interval","onChangeIndex","enableMouseEvents","map","step","genreBtns","genres","genre","genre_ids","genreID","name","btnElements","btn","i","Chip_default","key","label","Math","abs","data-id","style","backgroundImage","poster_path","title","adult","release_date","substr","vote_average","Star_default","overview","Button_default","data-imdb_id","MobileStepper_default","steps","mobileStepper","nextButton","size","disabled","KeyboardArrowLeft_default","KeyboardArrowRight_default","backButton","withTheme","MovieCategories","selectMovie","getFutureMovies","getKidsMovies","POSTER_URL","futureMovies","kidsMovies","rMovies","popularMovies","movie","currentVideos","d","Date","currentDate","getFullYear","getMonth","getDate","Discover","components_Carousel","components_MovieCategories","Home","TVShows","getTvShows","tvShows","show","first_air_date","SearchMovies","EmbeddedVideo","openError","openTrailer","vertical","horizontal","closeError","closeTrailer","nextProps","console","log","_this$state","video","Snackbar_default","anchorOrigin","handleClose","ContentProps","aria-describedby","message","height","allow","frameBorder","Warning_default","Transition","Slide_default","assign","MovieInfo","isToggled","isLoading","images","Dialog_default","fullScreen","TransitionComponent","appBar","Typography_default","homepage","flex","Title","backdrop_path","Rated","runtime","tagline","components_EmbeddedVideo","getImages","initialState","moviesInTheatres","combineReducers","arguments","action","objectSpread","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","createMuiTheme","palette","green","secondary","blueGrey","typography","useNextVariants","App","es","BrowserRouter","MuiThemeProvider_default","components_Navigation","Switch","Route","path","exact","components_Footer","components_MovieInfo","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.fd6f8704.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/movie-ticket-icon.20a2e103.svg\";","module.exports = __webpack_public_path__ + \"static/media/movie-db-logo.02a9430b.svg\";","import {\n  SEARCH_MOVIES,\n  UPCOMING_MOVIES,\n  POPULAR_MOVIES,\n  FUTURE_MOVIES,\n  R_MOVIES,\n  KIDS_MOVIES,\n  GET_MOVIE,\n  GET_VIDEOS,\n  GENRES,\n  GET_IMDB,\n  ACTOR_IMAGES,\n  GET_ACTORS,\n  TOGGLE_MOVIE,\n  GET_TV_SHOWS\n} from './types';\n\nimport axios from 'axios';\n\nconst API_KEY = 'api_key=b74e9e633dbb1ff6742cdbedaa08687d';\nconst API_URL = 'https://api.themoviedb.org/3';\n\nexport const searchMovies = (query) => dispatch => {\n  const querySearch = String(query).replace(/\\s/g, '%20');\n  axios.get(`${API_URL}/search/movie?${API_KEY}&language=en-US&query=${querySearch}&page=1&include_adult=false`)\n    .then((response) => {\n      dispatch({\n        type: SEARCH_MOVIES,\n        payload: response.data.results\n      })\n    })\n}\n\nexport const getFutureMovies = () => dispatch => {\n  var d = new Date();\n  var currentDate = `${d.getFullYear()}-${d.getMonth()}-${d.getDate()}`\n  axios.get(`${API_URL}/discover/movie?primary_release_date.gte=${currentDate}&primary_release_date.lte=${currentDate}&${API_KEY}&language=en-US`)\n    .then((response) => {\n      dispatch({\n        type: FUTURE_MOVIES,\n        payload: response.data.results\n      })\n    })\n}\n\nexport const getUpcomingMovies = () => dispatch => {\n  axios.get(`${API_URL}/movie/upcoming?${API_KEY}&language=en-US`)\n    .then((response) => {\n      dispatch({\n        type: UPCOMING_MOVIES,\n        payload: response.data.results\n      })\n    })\n}\n\nexport const getPopularMovies = () => dispatch => {\n  axios.get(`${API_URL}/movie/popular?${API_KEY}&sort_by=popularity.desc&language=en-US&page=1`)\n    .then((response) => {\n      dispatch({\n        type: POPULAR_MOVIES,\n        payload: response.data.results\n      })\n    })\n}\n\nexport const getRMovies = () => dispatch => {\n  axios.get(`${API_URL}/discover/movie?certification_country=US&certification=R&${API_KEY}&language=en-US&page=1`)\n    .then((response) => {\n      dispatch({\n        type: R_MOVIES,\n        payload: response.data.results\n      })\n    })\n}\n\nexport const getKidsMovies = () => dispatch => {\n  axios.get(`${API_URL}/discover/movie?certification_country=US&certification=G&${API_KEY}&language=en-US&page=1`)\n    .then((response) => {\n      dispatch({\n        type: KIDS_MOVIES,\n        payload: response.data.results\n      })\n    })\n}\n\nexport const getMovie = (id) => dispatch => {\n  axios.get(`${API_URL}/movie/${id}?${API_KEY}&language=en-US&page=1`)\n    .then((response) => {\n      dispatch({\n        type: GET_MOVIE,\n        payload: response.data\n      })\n    })\n}\n\nexport const getVideos = (id) => dispatch => {\n  axios.get(`${API_URL}/movie/${id}/videos?${API_KEY}&language=en-US`)\n    .then((response) => {\n      dispatch({\n        type: GET_VIDEOS,\n        payload: response.data.results\n      })\n    })\n}\n\nexport const getGenres = () => dispatch => {\n  axios.get(`${API_URL}/genre/movie/list?${API_KEY}`)\n    .then((response) => {\n      dispatch({\n        type: GENRES,\n        payload: response.data.genres\n      })\n    })\n}\n\nexport const getImdbData = (imdb_id) => dispatch => {\n  const imdb_key = 'apikey=5d02e9db';\n  const imdb_url = 'http://www.omdbapi.com';\n  axios.get(`${imdb_url}/?i=${imdb_id}&${imdb_key}`)\n    .then((response) => {\n      dispatch({\n        type: GET_IMDB,\n        payload: response.data\n      })\n    })\n}\n\nexport const getImages = (images) => dispatch => {\n  dispatch({\n    type: ACTOR_IMAGES,\n    payload: images\n  })\n}\n\nexport const getActors = (actors) => dispatch => {\n  if (actors.length > 1 && actors !== undefined) {\n    const actor_url = 'http://api.themoviedb.org/3/search/person?';\n    const API_KEY = 'api_key=b74e9e633dbb1ff6742cdbedaa08687d';\n    const actorImages = [];\n    actors.forEach((actor) => {\n      actor = actor.split(' ').join('+');\n      fetch(`${actor_url}${API_KEY}&query=${actor}`)\n        .then((res) => {\n          return res.json();\n        })\n        .then((actor) => {\n          if (actor.results[0] !== undefined) {\n            actorImages.push(actor.results[0].profile_path)\n          }\n        })\n    })\n    dispatch({\n      type: GET_ACTORS,\n      payload: actorImages\n    })\n  }\n}\n\nexport const toggleMovie = (bool) => dispatch => {\n  dispatch({\n    type: TOGGLE_MOVIE,\n    payload: bool\n  })\n}\n\nexport const getTvShows = () => dispatch => {\n  axios.get(`${API_URL}/discover/tv?${API_KEY}&language=en-US&sort_by=popularity.desc&page=1&with_original_language=en`)\n    .then((response) => {\n      dispatch({\n        type: GET_TV_SHOWS,\n        payload: response.data.results\n      })\n    })\n}\n","// MOVIES\nexport const SEARCH_MOVIES = 'SEARCH_MOVIES'\nexport const UPCOMING_MOVIES = 'UPCOMING_MOVIES';\nexport const POPULAR_MOVIES = 'POPULAR_MOVIES';\nexport const FUTURE_MOVIES = 'FUTURE_MOVIES';\nexport const R_MOVIES = 'R_MOVIES';\nexport const KIDS_MOVIES = 'KIDS_MOVIES';\nexport const GET_MOVIE = 'GET_MOVIE';\nexport const GET_VIDEOS = 'GET_VIDEOS';\nexport const GENRES = 'GENRES';\nexport const GET_IMDB = 'GET_IMDB';\nexport const ACTOR_IMAGES = 'ACTOR_IMAGES';\nexport const GET_ACTORS = 'GET_ACTORS';\nexport const TOGGLE_MOVIE = 'TOGGLE_MOVIE';\nexport const GET_TV_SHOWS = 'GET_TV_SHOWS';","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withRouter } from 'react-router-dom';\n\nimport { searchMovies } from '../actions/postActions';\n\nimport movieTicketIcon from '../images/movie-ticket-icon.svg';\n\n// SCSS\nimport '../scss/Navigation.scss';\n\nconst styles = {\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n};\n\nclass Navigation extends Component {\n    constructor() {\n        super();\n        this.state = {\n            left: false,\n            searchInputValue: ''\n        }\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n        this.handleSearchChange = this.handleSearchChange.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n    }\n    toggleDrawer = (side, open) => () => {\n        this.setState({\n            [side]: open,\n        });\n    };\n    handleSearchChange(e) {\n        this.setState({\n            searchInputValue: e.target.value\n        })\n    }\n    handleSearch(e) {\n        e.preventDefault();\n        // Make sure user entered query\n        if (this.state.searchInputValue.length > 0) {\n            this.props.searchMovies(this.state.searchInputValue);\n            this.props.history.push('/search');\n        }\n    }\n    render() {\n        const { classes } = this.props;\n        const sideList = (\n            <div className={classes.list}>\n                \n                <List>\n                    <ListItem button component=\"a\" href=\"/\">\n                            <ListItemText primary=\"Home\" />\n                    </ListItem>\n                    <ListItem button component=\"a\" href=\"/tvshows\">\n                            <ListItemText primary=\"TV Shows\" />\n                    </ListItem>\n                    <ListItem button component=\"a\" href=\"/discover\">\n                            <ListItemText primary=\"Discover Movies\" />\n                    </ListItem>\n                    <ListItem button component=\"a\" href=\"/search\">\n                            <ListItemText primary=\"Search Movies\" />\n                    </ListItem>\n                    <Divider />\n                    <ListItem button>\n                        <ListItemText primary={<div id=\"closeNav\">Close<CloseIcon /></div>} />\n                    </ListItem>\n                </List>\n            </div>\n        );\n        return (\n            <div id=\"navigation\">\n                {/* Appbar */}\n                <AppBar color=\"primary\" className=\"appbar\" position=\"static\">\n                    <Toolbar className=\"toolbar\">\n                        <div className=\"brand\">\n                            <IconButton onClick={this.toggleDrawer('left', true)} color=\"inherit\" aria-label=\"Open drawer\">\n                                {/* Left Menu Icon */}\n                                <MenuIcon />\n                            </IconButton>\n                            <h1>MoviePro <img src={movieTicketIcon} alt=\"Movie Ticket\" /></h1>\n                        </div>\n                        {/* Right Menu Search */}\n                        <form onSubmit={this.handleSearch} className=\"search\">\n                            <InputBase onChange={this.handleSearchChange} placeholder=\"Search Movies\" required />\n                            <SearchIcon onClick={this.handleSearch} />\n                        </form>\n                    </Toolbar>\n                </AppBar>\n                <Drawer open={this.state.left} onClose={this.toggleDrawer('left', false)}>\n                <div\n                    tabIndex={0}\n                    role=\"button\"\n                    onClick={this.toggleDrawer('left', false)}\n                    onKeyDown={this.toggleDrawer('left', false)}\n                >\n                    {sideList}\n                </div>\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nNavigation.propTypes = {\n    classes: PropTypes.object.isRequired,\n    searchMovies: PropTypes.func.isRequired,\n    searchOutput: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n    searchOutput: state.movies.searchOutput\n})\n\nexport default connect(mapStateToProps, { searchMovies })(withRouter((withStyles(styles)(Navigation))));","import React, { Component } from 'react';\n\nimport logo from '../images/movie-db-logo.svg';\nimport '../scss/Footer.scss';\n\nclass Footer extends Component {\n    render() {\n        return (\n            <div id=\"footer\">\n                <div className=\"container\">\n                    <div className=\"col info\">\n                        <p>All Movie and TV Show images, videos, and other data is provided by <a href=\"https://www.themoviedb.org/\">TheMovieDB</a>.</p>\n                        <img src={logo} alt=\"MovieDB Logo\" />\n                    </div>\n                    <div className=\"col links\">\n                        <h6>Links</h6>\n                        <ul>\n                            <li><a href=\"/\">Home</a></li>\n                            <li><a href=\"/\">TV Shows</a></li>\n                            <li><a href=\"/\">Discover Movies</a></li>\n                            <li><a href=\"/\">Search Movies</a></li>\n                        </ul>\n                    </div>\n                    <div className=\"col contact\">\n                        <h6>Contact</h6>\n                        <ul>\n                            <li>Portfolio: <a href=\"https://jacobcode.github.io/portfolio/\">Jacob Carver</a></li>\n                            <li>GitHub: <a href=\"https://github.com/JacobCode\">JacobCode</a></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { autoPlay } from 'react-swipeable-views-utils';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\nimport Star from '@material-ui/icons/Star';\n\nimport { getUpcomingMovies, getMovie, getVideos, getGenres, getImdbData, getActors, toggleMovie } from '../actions/postActions';\n\n// SCSS\nimport '../scss/Carousel.scss';\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nconst styles = theme => ({\n    \n});\n\n\nclass Carousel extends Component {\n    constructor() {\n        super();\n        this.state = {\n            activeStep: 0\n        };\n        this.viewMovie = this.viewMovie.bind(this);\n    }\n    // Handle Next\n    handleNext = () => {\n        this.setState(prevState => ({\n            activeStep: prevState.activeStep + 1,\n        }));\n    };\n    // Handle Previous\n    handleBack = () => {\n        this.setState(prevState => ({\n        activeStep: prevState.activeStep - 1,\n        }));\n    };\n    handleStepChange = activeStep => {\n        this.setState({ activeStep });\n    };\n    componentWillMount() {\n        this.props.getUpcomingMovies();\n        this.props.getGenres();\n    }\n    viewMovie(e) {\n        this.props.getMovie(e.target.dataset.id);\n        this.props.getVideos(e.target.dataset.id)\n        setTimeout(() => {\n            this.props.getImdbData(this.props.chosenMovie.imdb_id);\n            this.props.toggleMovie(true);\n            setTimeout(() => {\n                this.props.getActors(Array(this.props.currentImdbData.Actors).join().split(','));\n            }, 100)\n        }, 500)\n    }\n    render() {\n        const { classes, theme } = this.props;\n        const { activeStep } = this.state;\n        const maxSteps = this.props.upcomingMovies.length;\n        const POSTER_URL = 'http://image.tmdb.org/t/p/w500';\n        return (\n            <div id=\"carousel\">\n                <h1>Upcoming Releases</h1>\n                <Divider  variant=\"middle\" />\n                <div className={classes.root}>\n                    <AutoPlaySwipeableViews\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                    index={activeStep}\n                    interval={10000}\n                    onChangeIndex={this.handleStepChange}\n                    enableMouseEvents\n                    >\n                        {this.props.upcomingMovies.map((step, index) => {\n                            const genreBtns = [];\n                            this.props.genres.forEach((genre) => {\n                                step.genre_ids.forEach((genreID) => {\n                                    if (genreID === genre.id) {\n                                        genreBtns.push(genre.name);\n                                    }\n                                })\n                            })\n                            const btnElements = genreBtns.map((btn, i) => {\n                                    return (\n                                        <Chip key={i} label={btn} className=\"genre\" />\n                                    )\n                                });\n                            return (\n                                <div className=\"sliding-content\" key={index}>\n                                    {Math.abs(activeStep - index) <= 2 ? (\n                                        <div className=\"image-container\">\n                                            <div data-id={step.id} onClick={this.viewMovie} className=\"img\" style={{backgroundImage: `url('${POSTER_URL}/${step.poster_path}')`}}></div>\n                                        </div>\n                                    ) : null}\n                                    <div className=\"text\">\n                                        <h1>{step.title} <span>{step.adult === true ? 'R' : 'PG-13'}</span></h1>\n                                        <div className=\"info\"><span className=\"date\">{step.release_date.substr(0, 4)}</span> &bull; <span className=\"rating\">{step.vote_average > 0 ? `${step.vote_average} / 10`: 'Not Rated'}<Star /></span></div>\n                                        <p className=\"plot\">{step.overview}</p>\n                                        {/* ********** INSERT HERE ********** */}\n                                        <div className=\"genres\">\n                                            {btnElements}\n                                        </div>\n                                        <Button data-id={step.id} data-imdb_id={step.imdb_id} onClick={this.viewMovie} variant=\"contained\" color=\"secondary\">\n                                            <span data-id={step.id} data-imdb_id={step.imdb_id}>View More</span>\n                                        </Button>\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </AutoPlaySwipeableViews>\n                    <MobileStepper\n                    steps={maxSteps}\n                    position=\"static\"\n                    activeStep={activeStep}\n                    className={classes.mobileStepper}\n                    // Next Button\n                    nextButton={\n                        <Button size=\"small\" onClick={this.handleNext} disabled={activeStep === maxSteps - 1}>\n                        Next\n                        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n                        </Button>\n                    }\n                    // Back Button\n                    backButton={\n                        <Button size=\"small\" onClick={this.handleBack} disabled={activeStep === 0}>\n                        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n                        Prev\n                        </Button>\n                    }\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nCarousel.propTypes = {\n  classes: PropTypes.object,\n  theme: PropTypes.object,\n  getUpcomingMovies: PropTypes.func.isRequired,\n  getMovie: PropTypes.func.isRequired,\n  getVideos: PropTypes.func.isRequired,\n  upcomingMovies: PropTypes.array.isRequired,\n  getImdbData: PropTypes.func.isRequired,\n  currentImdbData: PropTypes.object,\n  chosenMovie: PropTypes.object.isRequired,\n  getActors: PropTypes.func.isRequired,\n  genres: PropTypes.array.isRequired,\n  toggleMovie: PropTypes.func.isRequired,\n  actors: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n    upcomingMovies: state.movies.upcomingMovies,\n    chosenMovie: state.movies.chosenMovie,\n    currentImdbData: state.movies.currentImdbData,\n    genres: state.movies.genres,\n    actors: state.movies.actors\n})\n\nexport default connect(mapStateToProps, { getUpcomingMovies, getMovie, getVideos, getGenres, getImdbData, getActors, toggleMovie })(withStyles(styles, { withTheme: true})(Carousel));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// SCSS\nimport '../scss/MovieCategories.scss';\n\nimport Divider from '@material-ui/core/Divider';\n\nimport { getPopularMovies, getRMovies, getFutureMovies, getKidsMovies, getVideos, getMovie, getImdbData, getActors, toggleMovie } from '../actions/postActions';\n\nclass MovieCategories extends Component {\n    constructor() {\n        super();\n        this.selectMovie = this.selectMovie.bind(this);\n    }\n    componentWillMount() {\n        this.props.getFutureMovies();\n        this.props.getPopularMovies();\n        this.props.getRMovies();\n        this.props.getKidsMovies();\n    }\n    selectMovie(e) {\n        this.props.getMovie(e.target.dataset.id);\n        this.props.getVideos(e.target.dataset.id)\n        setTimeout(() => {\n            this.props.getImdbData(this.props.chosenMovie.imdb_id);\n            this.props.toggleMovie(true);\n            setTimeout(() => {\n                this.props.getActors(Array(this.props.currentImdbData.Actors).join().split(','));\n            }, 100)\n        }, 500)\n    }\n    render() {\n        const POSTER_URL = 'http://image.tmdb.org/t/p/w300';\n        const { futureMovies, kidsMovies, rMovies, popularMovies } = this.props;\n            return (\n                <div id=\"movie-categories\">\n                    {/* Popular Movies Section */}\n                    <div className=\"section\">\n                        <h1>Popular Movies</h1>\n                        <Divider variant=\"middle\" />\n                        <div className=\"movies\">\n                            {popularMovies.map((movie, index) => {\n                                    return (\n                                        <div className=\"slide\" key={index}>\n                                            <div className=\"movie\">\n                                                <div data-id={movie.id} onClick={this.selectMovie} style={{backgroundImage: `url('${POSTER_URL}/${movie.poster_path}')`}} className=\"img\">\n                                                </div>\n                                                <div className=\"info\">\n                                                    <h2>{movie.title}</h2>\n                                                    <Divider variant=\"middle\" />\n                                                    <p>{movie.release_date.substr(0, 4)}</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                    {/* R Movies Section */}\n                    <div className=\"section\">\n                        <h1>Top Rated R Movies</h1>\n                        <Divider variant=\"middle\" />\n                        <div className=\"movies\">\n                            {rMovies.map((movie, index) => {\n                                    return (\n                                        <div className=\"slide\" key={index}>\n                                            <div className=\"movie\">\n                                                <div data-id={movie.id} onClick={this.selectMovie} style={{backgroundImage: `url('${POSTER_URL}/${movie.poster_path}')`}} className=\"img\">\n\n                                                </div>\n                                                <div className=\"info\">\n                                                    <h2>{movie.title}</h2>\n                                                    <Divider variant=\"middle\" />\n                                                    <p>{movie.release_date.substr(0, 4)}</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                    {/* Kids Movies Section */}\n                    <div className=\"section\">\n                        <h1>Top Rated Kids Movies</h1>\n                        <Divider variant=\"middle\" />\n                        <div className=\"movies\">\n                            {kidsMovies.map((movie, index) => {\n                                    return (\n                                        <div className=\"slide\" key={index}>\n                                            <div className=\"movie\">\n                                                <div data-id={movie.id} onClick={this.selectMovie} style={{backgroundImage: `url('${POSTER_URL}/${movie.poster_path}')`}} className=\"img\">\n\n                                                </div>\n                                                <div className=\"info\">\n                                                    <h2>{movie.title}</h2>\n                                                    <Divider variant=\"middle\" />\n                                                    <p>{movie.release_date.substr(0, 4)}</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                    {/* Future Movies Section */}\n                    <div className=\"section\">\n                        <h1>Future Movies</h1>\n                        <Divider variant=\"middle\" />\n                        <div className=\"movies\">\n                            {futureMovies.map((movie, index) => {\n                                    return (\n                                        <div className=\"slide\" key={index}>\n                                            <div className=\"movie\">\n                                                <div data-id={movie.id} onClick={this.selectMovie} style={{backgroundImage: movie.poster_path !== null ? `url('${POSTER_URL}/${movie.poster_path}')` : \"url('https://happytoothnc.com/wp-content/uploads/2016/10/orionthemes-placeholder-image-1.jpg')\"}} className=\"img\">\n\n                                                </div>\n                                                <div className=\"info\">\n                                                    <h2>{movie.title}</h2>\n                                                    <Divider variant=\"middle\" />\n                                                    <p>{movie.release_date.substr(0, 4)}</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </div>\n            )\n    }\n}\n\nMovieCategories.propTypes = {\n    getPopularMovies: PropTypes.func.isRequired,\n    getRMovies: PropTypes.func.isRequired,\n    getFutureMovies: PropTypes.func.isRequired,\n    getKidsMovies: PropTypes.func.isRequired,\n    getMovie: PropTypes.func.isRequired,\n    getVideos: PropTypes.func.isRequired,\n    currentVideos: PropTypes.array.isRequired,\n    popularMovies: PropTypes.array.isRequired,\n    futureMovies: PropTypes.array.isRequired,\n    getImdbData: PropTypes.func.isRequired,\n    currentImdbData: PropTypes.object.isRequired,\n    chosenMovie: PropTypes.object,\n    getActors: PropTypes.func.isRequired,\n    actors: PropTypes.array,\n    rMovies: PropTypes.array.isRequired,\n    kidsMovies: PropTypes.array.isRequired,\n    toggleMovie: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    popularMovies: state.movies.popularMovies,\n    futureMovies: state.movies.futureMovies,\n    currentVideos: state.movies.currentVideos,\n    currentImdbData: state.movies.currentImdbData,\n    chosenMovie: state.movies.chosenMovie,\n    rMovies: state.movies.rMovies,\n    kidsMovies: state.movies.kidsMovies,\n    actors: state.movies.actors\n})\n\nexport default connect(mapStateToProps, { getPopularMovies, getFutureMovies, getRMovies, getKidsMovies, getVideos, getMovie, getImdbData, getActors, toggleMovie })(MovieCategories);","import React, { Component } from 'react';\n\n// Components\nimport Carousel from '../components/Carousel';\nimport MovieCategories from '../components/MovieCategories';\n\n\nclass Discover extends Component {\n    render() {\n        return (\n            <div id=\"Discover\">\n                <Carousel />\n                <MovieCategories />\n            </div>\n        )\n    }\n}\n\nexport default Discover;","import React, { Component } from 'react';\n\nimport '../scss/Home.scss';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div id=\"home\">\n                <div className=\"container main\">\n                    <a href=\"/tvshows\" className=\"tv\">\n                        <div></div>\n                        <span>TV Shows</span>\n                    </a>\n                    <a href=\"/discover\" className=\"movies\">\n                        <div></div>\n                        <span>Movies</span>\n                    </a>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getTvShows } from '../actions/postActions';\nimport Divider from '@material-ui/core/Divider';\nimport Star from '@material-ui/icons/Star';\n\nimport '../scss/TVShows.scss';\n\nclass TVShows extends Component {\n    componentWillMount() {\n        this.props.getTvShows();\n    }\n    render() {\n        const { tvShows } = this.props;\n        const POSTER_URL = 'http://image.tmdb.org/t/p/w500';\n        return (\n            <div id=\"tv-shows\">\n                <h1>Popular TV SHOWS</h1>\n                <Divider  variant=\"middle\" />\n                <div className=\"container\">\n                    {tvShows.map((show, index) => {\n                        return (\n                            <div className=\"show\" key={index}>\n                                <h4>{show.name}</h4>\n                                <img src={`${POSTER_URL}${show.poster_path}`} />\n                                <div className=\"info\">\n                                    <span className=\"rating\">{show.vote_average > 0 ? `${show.vote_average}`: 'NR'} <Star /></span>\n                                    &bull;\n                                    <span className=\"air-date\">{show.first_air_date.substr(0, 4)}</span>\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n\nTVShows.propTypes = {\n    tvShows: PropTypes.array.isRequired,\n    getTvShows: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    tvShows: state.movies.tvShows\n})\n\nexport default connect(mapStateToProps, { getTvShows })(TVShows);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Divider from '@material-ui/core/Divider';\n\nimport { getMovie, getVideos, getImdbData, getActors, toggleMovie } from '../actions/postActions';\n\n// SCSS\nimport '../scss/SearchMovies.scss';\n\nclass SearchMovies extends Component {\n    constructor() {\n        super();\n        this.state = {}\n        this.selectMovie = this.selectMovie.bind(this);\n    }\n    selectMovie(e) {\n        this.props.getMovie(e.target.dataset.id);\n        this.props.getVideos(e.target.dataset.id)\n        setTimeout(() => {\n            this.props.getImdbData(this.props.chosenMovie.imdb_id);\n            this.props.toggleMovie(true);\n            setTimeout(() => {\n                this.props.getActors(Array(this.props.currentImdbData.Actors).join().split(','));\n            }, 100)\n        }, 500)\n    }\n    render() {\n        const POSTER_URL = 'http://image.tmdb.org/t/p/w500';\n        const { searchOutput } = this.props\n        if (this.props.searchOutput.length > 0) {\n            return (\n                <div id=\"search-results\">\n                    <h1>Search Results</h1>\n                    <Divider variant=\"fullWidth\" />\n                    <div className=\"container\">\n                        <div className=\"movies\">\n                            {searchOutput.map((movie, index) => {\n                                    return (\n                                        <div key={index} className=\"movie\">\n                                            <div data-id={movie.id} onClick={this.selectMovie} style={{backgroundImage: movie.poster_path !== null ? `url('${POSTER_URL}/${movie.poster_path}')` : \"url('https://happytoothnc.com/wp-content/uploads/2016/10/orionthemes-placeholder-image-1.jpg')\"}} className=\"img\">\n\n                                            </div>\n                                            <div className=\"info\">\n                                                <h2>{movie.title}</h2>\n                                                <Divider variant=\"fullWidth\" />\n                                                <p>{movie.release_date.substr(0, 4)}</p>\n                                            </div>\n                                        </div>\n                                )\n                            })}\n                        </div>\n                        <span>Results: {searchOutput.length}</span>\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <div id=\"no-results\">\n                    <h1>NO RESULTS...</h1>\n                </div>\n            )\n        }\n    }\n}\n\nSearchMovies.propTypes = {\n    getMovie: PropTypes.func.isRequired,\n    getVideos: PropTypes.func.isRequired,\n    getImdbData: PropTypes.func.isRequired,\n    currentImdbData: PropTypes.object,\n    chosenMovie: PropTypes.object.isRequired,\n    getActors: PropTypes.func.isRequired,\n    searchOutput: PropTypes.array\n}\n\nconst mapStateToProps = state => ({\n    chosenMovie: state.movies.chosenMovie,\n    currentImdbData: state.movies.currentImdbData,\n    actors: state.movies.actors,\n    searchOutput: state.movies.searchOutput\n})\n\nexport default connect(mapStateToProps, { getMovie, getVideos, getImdbData, getActors, toggleMovie })(SearchMovies);","import React, { Component } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from '@material-ui/core/Button';\n\nclass EmbeddedVideo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            openError: true,\n            openTrailer: false,\n            vertical: 'bottom',\n            horizontal: 'left',\n        }\n        this.closeError = this.closeTrailer.bind(this);\n        this.openError = this.closeTrailer.bind(this);\n        this.closeTrailer = this.closeTrailer.bind(this);\n        this.openTrailer = this.openTrailer.bind(this);\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.openTrailer) {\n            this.openTrailer();\n        } else if (nextProps.openError) {\n            this.openError();\n        }\n    }\n    openTrailer() {\n        this.setState({\n            openTrailer: true\n        })\n    }\n    closeTrailer() {\n        this.setState({\n            openTrailer: false\n        });\n    }\n    openError() {\n        this.setState({\n            openError: true\n        });\n        console.log(\"OPEN\")\n    }\n    closeError() {\n        this.setState({\n            openError: false\n        });\n    }\n    render() {\n        const { vertical, horizontal } = this.state;\n        if (this.props.video !== undefined) {\n            return (\n                <Snackbar id=\"snackbar\"\n                anchorOrigin={{ vertical, horizontal }}\n                open={this.state.openTrailer}\n                onClose={this.handleClose}\n                ContentProps={{\n                    'aria-describedby': 'message-id'\n                }}\n                message={<span id=\"message-id\">Trailer</span>}\n                >\n                <div className=\"trailer\">\n                    <Button onClick={this.closeTrailer} variant=\"contained\">\n                        <CloseIcon />\n                    </Button>\n                    <iframe title=\"ytplayer\" id=\"message-id\" type=\"text/html\" width=\"650\" height=\"350\" allow=\"autoplay; fullscreen\"\n                    src = {\n                        this.props.video.key !== undefined ? `https://www.youtube.com/embed/${this.props.video.key}?rel=0&modestbranding=1&autohide=1&mute=0&showinfo=0&controls=1&autoplay=1` : ''\n                    }\n                    frameBorder=\"0\"></iframe>\n                </div>\n                    \n                </Snackbar>\n            )\n        } else {\n            return (\n                <Snackbar id=\"error-snackbar\"\n                anchorOrigin={{ vertical, horizontal }}\n                open={this.state.openError}\n                onClose={this.handleClose}\n                ContentProps={{\n                    'aria-describedby': 'error-id'\n                }}\n                message={<span id=\"error-id\">No Video Available <WarningIcon /></span>}>\n                    {/* <div className=\"error\">Error </div> */}\n                </Snackbar>\n            )\n        }\n    }\n}\n\nexport default EmbeddedVideo;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import ListItem from '@material-ui/core/ListItem';\n// import List from '@material-ui/core/List';\n// import Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport Divider from '@material-ui/core/Divider';\n\nimport { connect } from 'react-redux';\nimport { getPopularMovies, getRMovies, getVideos, getMovie, getImdbData, getActors, getImages } from '../actions/postActions';\n\n// Components\nimport EmbeddedVideo from './EmbeddedVideo';\n\n// SCSS\nimport '../scss/MovieInfo.scss';\n\nconst styles = {\n  appBar: {\n    position: 'relative',\n  },\n  flex: {\n    flex: 1,\n  },\n};\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass MovieInfo extends Component {\n    state = {\n        open: this.props.isToggled,\n        POSTER_URL: 'http://image.tmdb.org/t/p/w500',\n        isLoading: false,\n        openTrailer: false,\n        openError: false\n    };\n    getVideos = () => {\n        this.setState({\n            openTrailer: true,\n            openError: true\n        })\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps) {\n            setTimeout(() => {\n                this.setState({\n                    isLoading: false\n                })\n            }, 500)\n            this.setState({\n                open: this.props.isToggled,\n                isLoading: true\n            });\n        }\n    }\n    handleClose = () => {\n        this.setState({ open: false, isLoading: false, openTrailer: false, openError: false });\n    };\n    render() {\n        const { classes, chosenMovie, actors } = this.props;\n        const images = actors.map((actor, index) => {\n            return (\n                <div key={index} className=\"image-container\">\n                    <div style={{backgroundImage: `url('${actor !== null && actor.length > 0 ? this.state.POSTER_URL + actor : 'http://www.independentmediators.co.uk/wp-content/uploads/2016/02/placeholder-image.jpg'}')`}} className=\"actor-img\"></div>\n                </div>\n            )\n        })\n        return (\n            <div id=\"movie-info\">\n                <Dialog\n                fullScreen\n                open={this.state.open}\n                onClose={this.handleClose}\n                TransitionComponent={Transition}\n                id=\"dialog\"\n                >\n            \n                    <AppBar id=\"app-bar\" className={classes.appBar}>\n                        <Toolbar id=\"tool-bar\">\n                            <IconButton color=\"inherit\" onClick={this.handleClose} aria-label=\"Close\">\n                                <CloseIcon />\n                            </IconButton>\n                            <Typography component=\"a\" href={chosenMovie.homepage} color=\"inherit\" className={classes.flex}>\n                                {/* IMDB TITLE */}\n                                {this.props.currentImdbData.Title}\n                            </Typography>\n                        </Toolbar>\n                    </AppBar>\n\n                    <div className=\"cover\" style={{backgroundImage: `url('${this.state.POSTER_URL}/${chosenMovie.backdrop_path}')`}}></div>\n                    \n                    <div className=\"main-content\">\n                        <div className=\"content\">\n                            <div className=\"poster-container\">\n                                <div className=\"poster\" style={{backgroundImage: `url('${this.state.POSTER_URL}/${chosenMovie.poster_path}')`}}>\n                                    \n                                </div>\n                                <Button onClick={this.getVideos} variant=\"contained\" color=\"secondary\">Watch Trailer</Button>\n                            </div>\n                            <div className=\"movie-info\">\n                                <p className=\"runtime-date\"><span>{this.props.currentImdbData.Rated}</span> &bull; {chosenMovie.runtime} min</p>\n                                <p className=\"overview\">{chosenMovie.overview}</p>\n                                <p className=\"tagline\">{chosenMovie.tagline !== undefined && chosenMovie.tagline.length > 0 ? `- ${chosenMovie.tagline}` : ''}</p>\n                                <div className=\"info\">\n\n                                </div>\n                                <div className=\"actors-container\">\n                                    <h1>Actors</h1>\n                                    <div className=\"actors-list\">\n                                        <div className=\"actor\">\n                                            <div className=\"images\">\n                                                {images}\n                                            </div>\n                                            {/* <div className=\"names\">\n                                                {Array(this.props.currentImdbData.Actors).join().split(',').map((actor) => {\n                                                    return (\n                                                        <div className=\"name\" key={actor}>\n                                                            <span>{actor}</span>\n                                                        </div>\n                                                    )\n                                                })}\n                                            </div> */}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <Divider variant=\"middle\" />\n                    \n                    <EmbeddedVideo video={this.props.currentVideos[0]} openTrailer={this.state.openTrailer} openError={this.state.openError} />\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nMovieInfo.propTypes = {\n    classes: PropTypes.object.isRequired,\n    chosenMovie: PropTypes.object.isRequired,\n    currentVideos: PropTypes.array.isRequired,\n    currentImdbData: PropTypes.object.isRequired,\n    getImages: PropTypes.func.isRequired,\n    getPopularMovies: PropTypes.func.isRequired,\n    getRMovies: PropTypes.func.isRequired,\n    getVideos: PropTypes.func.isRequired,\n    getMovie: PropTypes.func.isRequired,\n    getImdbData: PropTypes.func.isRequired,\n    getActors: PropTypes.func.isRequired,\n    actorImages: PropTypes.string,\n    actors: PropTypes.array,\n\n    isToggled: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n    chosenMovie: state.movies.chosenMovie,\n    currentVideos: state.movies.currentVideos,\n    currentImdbData: state.movies.currentImdbData,\n    actorImages: state.movies.actorImages,\n    actors: state.movies.actors,\n    isToggled: state.movies.isToggled\n})\n\nexport default connect(mapStateToProps, { getPopularMovies, getRMovies, getVideos, getMovie, getImdbData, getActors, getImages })(withStyles(styles)(MovieInfo));","import {\n  SEARCH_MOVIES,\n  UPCOMING_MOVIES,\n  POPULAR_MOVIES,\n  FUTURE_MOVIES,\n  R_MOVIES,\n  KIDS_MOVIES,\n  GET_MOVIE,\n  GET_VIDEOS,\n  GENRES,\n  GET_IMDB,\n  ACTOR_IMAGES,\n  GET_ACTORS,\n  TOGGLE_MOVIE,\n  GET_TV_SHOWS\n} from '../actions/types';\n\nconst initialState = {\n  searchOutput: [],\n  moviesInTheatres: [],\n  upcomingMovies: [],\n  popularMovies: [],\n  futureMovies: [],\n  rMovies: [],\n  kidsMovies: [],\n  chosenMovie: {},\n  currentVideos: [],\n  tvShows: [],\n  currentImdbData: {},\n  actorImages: '',\n  genres: [],\n  actors: [],\n  isToggled: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPCOMING_MOVIES:\n      return {\n        ...state,\n        upcomingMovies: action.payload\n      }\n    case FUTURE_MOVIES:\n      return {\n        ...state,\n        futureMovies: action.payload\n      }\n    case POPULAR_MOVIES:\n      return {\n        ...state,\n        popularMovies: action.payload\n      }\n    case R_MOVIES:\n      return {\n        ...state,\n        rMovies: action.payload\n      }\n    case KIDS_MOVIES:\n      return {\n        ...state,\n        kidsMovies: action.payload\n      }\n    case GET_MOVIE:\n      return {\n        ...state,\n        chosenMovie: action.payload\n      }\n    case GET_VIDEOS:\n      return {\n        ...state,\n        currentVideos: action.payload\n      }\n    case GENRES:\n      return {\n        ...state,\n        genres: action.payload\n      }\n    case GET_IMDB:\n      return {\n        ...state,\n        currentImdbData: action.payload\n      }\n    case ACTOR_IMAGES:\n      return {\n        ...state,\n        actorImages: action.payload\n      }\n    case GET_ACTORS:\n      return {\n        ...state,\n        actors: action.payload\n      }\n    case TOGGLE_MOVIE:\n      return {\n        ...state,\n        isToggled: action.payload\n      }\n    case SEARCH_MOVIES:\n      return {\n        ...state,\n        searchOutput: action.payload\n      }\n    case GET_TV_SHOWS:\n      return {\n        ...state,\n        tvShows: action.payload\n      }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport postReducer from './postReducer';\n\nexport default combineReducers({\n  movies: postReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\n// Array of middleware\nconst middleware = [thunk];\n\n// Store\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    // Add middleware\n    applyMiddleware(...middleware)\n  )\n);\n\nexport default store;\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n// Layout\nimport Navigation from './components/Navigation';\nimport Footer from './components/Footer';\n\n// Components\nimport Discover from './containers/Discover';\nimport Home from './containers/Home';\nimport TVShows from './containers/TVShows';\nimport SearchMovies from './containers/SearchMovies';\nimport MovieInfo from './components/MovieInfo';\n\n// Store\nimport store from './store';\n\n// CSS\nimport './scss/App.scss';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nconst theme = createMuiTheme({\n  palette: {\n    primary: green,\n    secondary: blueGrey,\n  },\n  typography: {\n    useNextVariants: true,\n  }\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <MuiThemeProvider theme={theme}>\n            <div className=\"App\">\n              <Navigation />\n              <Switch>\n                <Route path={process.env.PUBLIC_URL + '/'} component={Home} exact />\n                <Route path={process.env.PUBLIC_URL + '/discover'} component={Discover} exact />\n                <Route path={process.env.PUBLIC_URL + '/tvshows'} component={TVShows} exact />\n                <Route path={process.env.PUBLIC_URL + '/search'} component={SearchMovies} exact />\n              </Switch>\n              <Footer />\n              <MovieInfo />\n            </div>\n          </MuiThemeProvider>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}